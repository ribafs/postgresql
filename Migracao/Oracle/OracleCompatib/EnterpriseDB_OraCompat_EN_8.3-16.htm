<html><head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>EnterpriseDB Oracle Compatibility Developer's Guide: Joins Between Tables</title>

<meta name="GENERATOR" content="HTML Transit 8.0 Trial Version by Avantstar, Inc. www.avantstar.com">
<meta name="TransitPubID" content="1953"><style type="text/css">
<!--
	.Title-1
	{
		text-align: center
	}
	.Heading1-1
	{
		text-align: left
	}
-->
</style></head><body><a name="TopOfPage"> </a>
<!-- TRANSIT - INFOBEFORE -->
<a href="http://www.enterprisedb.com/index.do?lpage=true"><img alt="EnterpriseDB" src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/logo.gif" border="0"></a><p style="text-align: center;"><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-15.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/inveppv.gif" alt="Previous Page" border="0"></a><!-- TRANSIT - TOC --><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/Table%20of%20Contents.htm#TopOfPage" target="_top"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/invetoc.gif" alt="Table Of Contents" border="0"></a><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-17.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/invepnx.gif" alt="Next Page" border="0"></a></p>

  <div style="margin-left: 36pt;"><p><a name="P1167_51009"></a><span style="font-family: 'Arial'; font-size: 13pt;">2.1.5 Joins Between Tables</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Thus
far, our queries have only accessed one table at a time. Queries can
access multiple tables at once, or access the same table in such a way
that multiple rows of the table are being processed at the same time. A
query that accesses multiple rows of the same or different tables at
one time is called a </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>join</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
query. For example, say you wish to list all the employee records
together with the name and location of the associated department. To do
that, we need to compare the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">deptno</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> column of each row of the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table with the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">deptno</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> column of all rows in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">dept</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table, and select the pairs of rows where these values match. This would be accomplished by the following query:</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT emp.ename, emp.sal, dept.deptno, dept.dname, dept.loc FROM emp, dept WHERE emp.deptno = dept.deptno;</span>

<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ename  |   sal   | deptno |   dname    |   loc</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">--------+---------+--------+------------+----------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER | 1300.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK  | 2450.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> KING   | 5000.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT  | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES  | 2975.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH  |  800.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS  | 1100.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD   | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD   | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER | 1500.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN  | 1600.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE  | 2850.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES  |  950.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(14 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Observe two things about the result set:</span></p>

  <div style="margin-left: 36pt;"><p><span style="font-family: 'Wingdings'; font-size: 12pt; color: Black;">n </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">There is no result row for department 40. This is because there is no matching entry in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table for department 40, so the join ignores the unmatched rows in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">dept</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table. Shortly we will see how this can be fixed.</span></p>

  <p><span style="font-family: 'Wingdings'; font-size: 12pt; color: Black;">n </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">It
is more desirable to list the output columns qualified by table name
rather than using * or leaving out the qualification as follows:</span></p></div><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT ename, sal, dept.deptno, dname, loc FROM emp, dept WHERE emp.deptno = dept.deptno;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Since all the columns had different names (except for </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">deptno</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
which therefore must be qualified), the parser automatically found out
which table they belong to, but it is good style to fully qualify
column names in join queries:</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Join queries of the kind seen thus far can also be written in this alternative form:</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT emp.ename, emp.sal, dept.deptno, dept.dname, dept.loc FROM emp INNER JOIN dept ON emp.deptno = dept.deptno;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">This syntax is not as commonly used as the one above, but we show it here to help you understand the following topics.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><a name="P1196_53647"></a>You
will notice that in all the above results for joins no employees were
returned that belonged to department 40 and as a consequence, the
record for department 40 never appears. Now we will figure out how we
can get the department 40 record in the results despite the fact that
there are no matching employees. What we want the query to do is to
scan the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">dept</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table and for each row to find the matching </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> row. If no matching row is found we want some &#8220;empty&#8221; values to be substituted for the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table&#8217;s columns. This kind of query is called an </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>outer join</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">. (The joins we have seen so far are </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>inner joins</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.) The command looks like this:</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT emp.ename, emp.sal, dept.deptno, dept.dname, dept.loc FROM dept LEFT OUTER JOIN emp ON emp.deptno = dept.deptno;</span>

<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ename  |   sal   | deptno |   dname    |   loc</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">--------+---------+--------+------------+----------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER | 1300.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK  | 2450.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> KING   | 5000.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT  | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES  | 2975.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH  |  800.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS  | 1100.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD   | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD   | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER | 1500.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN  | 1600.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE  | 2850.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES  |  950.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">        |         |     40 | OPERATIONS | BOSTON</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(15 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">This query is called a </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>left outer join</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
because the table mentioned on the left of the join operator will have
each of its rows in the output at least once, whereas the table on the
right will only have those rows output that match some row of the left
table. When a left-table row is selected for which there is no
right-table match, empty (null) values are substituted for the
right-table columns.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">An alternative syntax for an outer join is to use the outer join operator, &#8220;(+)&#8221;, in the join condition within the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">WHERE</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
clause. The outer join operator is placed after the column name of the
table for which null values should be substituted for unmatched rows.
So for all the rows in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">dept</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table that have no matching rows in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table, </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Postgres Plus Advanced Server</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> returns null for any select list expressions containing columns of </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">. Hence the above example could be rewritten as:</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT emp.ename, emp.sal, dept.deptno, dept.dname, dept.loc FROM dept, emp WHERE emp.deptno(+) = dept.deptno;</span>

<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ename  |   sal   | deptno |   dname    |   loc</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">--------+---------+--------+------------+----------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER | 1300.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK  | 2450.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> KING   | 5000.00 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT  | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES  | 2975.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH  |  800.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS  | 1100.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD   | 3000.00 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD   | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER | 1500.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN  | 1600.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE  | 2850.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN | 1250.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES  |  950.00 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">        |         |     40 | OPERATIONS | BOSTON</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(15 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">We can also join a table against itself. This is called a </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>self join</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.
As an example, suppose we wish to find the name of each employee along
with the name of that employee&#8217;s manager. So we need to compare the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> column of each </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> row to the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">empno</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> column of all other </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> rows.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT e1.ename || ' works for ' || e2.ename AS "Employees and their Managers" FROM emp e1, emp e2 WHERE e1.mgr = e2.empno;</span>

<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> Employees and their Managers</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">------------------------------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD works for JONES</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT works for JONES</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD works for BLAKE</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER works for BLAKE</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN works for BLAKE</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES works for BLAKE</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN works for BLAKE</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER works for CLARK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS works for SCOTT</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK works for KING</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE works for KING</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES works for KING</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH works for FORD</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(13 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Here, the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table has been re-labeled as </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">e1</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> to represent the employee row in the select list and in the join condition, and also as </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">e2</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
to represent the matching employee row acting as manager in the select
list and in the join condition. These kinds of aliases can be used in
other queries to save some typing, for example:</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT e.ename, e.mgr, d.deptno, d.dname, d.loc FROM emp e, dept d WHERE e.deptno = d.deptno;</span>

<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ename  | mgr  | deptno |   dname    |   loc</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">--------+------+--------+------------+----------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER | 7782 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK  | 7839 |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> KING   |      |     10 | ACCOUNTING | NEW YORK</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT  | 7566 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES  | 7839 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH  | 7902 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS  | 7788 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD   | 7566 |     20 | RESEARCH   | DALLAS</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD   | 7698 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER | 7698 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN  | 7698 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE  | 7839 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN | 7698 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES  | 7698 |     30 | SALES      | CHICAGO</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(14 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">This style of abbreviating will be encountered quite frequently.</span></p>

<p style="text-align: center;"><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-15.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/inveppv.gif" alt="Previous Page" border="0"></a><!-- TRANSIT - TOC --><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/Table%20of%20Contents.htm#TopOfPage" target="_top"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/invetoc.gif" alt="Table Of Contents" border="0"></a><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-17.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/invepnx.gif" alt="Next Page" border="0"></a></p>

<a href="http://www.avantstar.com/"><img src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/transpwr.gif" alt="Powered by Transit"></a><!-- TRANSIT - INFOAFTER -->
<script type="text/javascript"> 
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); 
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); 
</script><script src="EnterpriseDB_OraCompat_EN_8.3-16_arquivos/ga.js" type="text/javascript"></script> 
<script type="text/javascript"> 
var pageTracker = _gat._getTracker("UA-4413916-2"); 
pageTracker._initData(); 
pageTracker._trackPageview(); 
</script> 
</body></html>