<html><head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>EnterpriseDB Oracle Compatibility Developer's Guide: Hierarchical Queries</title>

<meta name="GENERATOR" content="HTML Transit 8.0 Trial Version by Avantstar, Inc. www.avantstar.com">
<meta name="TransitPubID" content="1962"><style type="text/css">
<!--
	.Title-1
	{
		text-align: center
	}
	.Heading1-1
	{
		text-align: left
	}
-->
</style></head><body><a name="TopOfPage"> </a>
<!-- TRANSIT - INFOBEFORE -->
<a href="http://www.enterprisedb.com/index.do?lpage=true"><img alt="EnterpriseDB" src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/logo.gif" border="0"></a><p style="text-align: center;"><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-24.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/inveppv.gif" alt="Previous Page" border="0"></a><!-- TRANSIT - TOC --><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/Table%20of%20Contents.htm#TopOfPage" target="_top"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/invetoc.gif" alt="Table Of Contents" border="0"></a><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-26.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/invepnx.gif" alt="Next Page" border="0"></a></p>

  <div style="margin-left: 36pt;"><p><a name="P1546_74942"></a><span style="font-family: 'Arial'; font-size: 13pt;">2.2.5 Hierarchical Queries</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">A </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>hierarchical query</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
is a type of query that returns the rows of the result set in a
hierarchical order based upon data forming a parent-child relationship.
A hierarchy is typically represented by an inverted tree structure. The
tree is comprised of interconnected </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>nodes</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">. Each node may be connected to none, one, or multiple </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>child</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> nodes. Each node is connected to one </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>parent</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> node except for the top node which has no parent. This node is the </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>root</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> node. Each tree has exactly one root node. Nodes that don&#8217;t have any children are called </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>leaf</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
nodes. A tree always has at least one leaf node - e.g., the trivial
case where the tree is comprised of a single node. In this case it is
both the root and the leaf.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">In a hierarchical query the rows of the result set represent the nodes of one or more trees.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><b>Note</b></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">: It is possible that a single, given row may appear in more than one tree and thus appear more than once in the result set.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The hierarchical relationship in a query is described by the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause which forms the basis of the order in which rows are returned in the result set. The context of where the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause and its associated optional clauses appear in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command is shown below.</span></p><div style="margin-left: 24pt;"><pre><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>select_list</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> FROM </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> [ WHERE ...]</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">  [ START WITH </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>start_expression</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> ]</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">    CONNECT BY { PRIOR </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>parent_expr</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> = </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>child_expr</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> |</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">      </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>child_expr</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> = PRIOR </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>parent_expr</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> }</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">  [ ORDER SIBLINGS BY </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>column1</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> [ ASC | DESC ]</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">      [, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>column2</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> [ ASC | DESC ] ] ...</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">  [ GROUP BY ...]</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">  [ HAVING ...]</span>
<span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">  [ </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>other</i></span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"> ...]</span></pre>

</div><p><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>select_list</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> is one or more expressions that comprise the fields of the result set. </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> is one or more tables or views from which the rows of the result set originate. </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>other</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> is any additional legal </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command clauses. The clauses pertinent to hierarchical queries, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">, and </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">ORDER SIBLINGS BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> are described in the following sections.</span></p>

  <div style="margin-left: 43pt;"><p><span style="font-family: 'Times New Roman'; font-size: 14pt;"><a name="P1561_76846"></a>2.2.5.1 Defining the Parent/Child Relationship</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">For any given row, its parent and its children are determined by the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNE</span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause. The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause must consist of two expressions compared with the equals (</span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">=</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">) operator. In addition, one of these two expressions must be preceded by the keyword, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">PRIOR</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">For any given row, to determine its children:</span></p>

  <div style="margin-left: 36pt;"><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">1. Evaluate </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>parent_expr</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> on the given row</span></p>

  <p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">2. Evaluate </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>child_expr</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> on any other row resulting from the evaluation of </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span></p>

  <p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">3. </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">If </span><i><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">parent_expr</span></i><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> = </span><i><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">child_expr</span></i><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">, then this row is a child node of the given parent row</span></p>

  <p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">4. Repeat the process for all remaining rows in </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">. All rows that satisfy the equation in step 3 are the children nodes of the given parent row.</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><b>Note</b></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">: The evaluation process to determine if a row is a child node occurs on every row returned by </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> before the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">WHERE</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause is applied to </span><i><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">table_expressio</span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">n</span></i><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">By
iteratively repeating this process treating each child node found in
the prior steps as a parent, an inverted tree of nodes is constructed.
The process is complete when the final set of child nodes has no
children of their own - these are the leaf nodes.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">A </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command that includes a </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause typically includes the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause. The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
clause determines the rows that are to be the root nodes - i.e., the
rows that are the initial parent nodes upon which the algorithm
described previously is to be applied. This is further explained in the
following section.</span></p>

  <div style="margin-left: 43pt;"><p><span style="font-family: 'Times New Roman'; font-size: 14pt;"><a name="P1571_78330"></a>2.2.5.2 Selecting the Root Nodes</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause is used to determine the row(s) selected by </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> that are to be used as the root nodes. All rows selected by </span><i><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">table_e</span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">xpression</span></i><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> where </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>start_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
evaluates to &#8220;true&#8221; become a root node of a tree. Thus, the number of
potential trees in the result set is equal to the number of root nodes.
As a consequence, if the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause is omitted, then every row returned by </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;"><i>table_expression</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> is a root of its own tree.</span></p>

  <div style="margin-left: 43pt;"><p><span style="font-family: 'Times New Roman'; font-size: 14pt;"><a name="P1573_78816"></a>2.2.5.3 Organization Tree in the Sample Application</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Consider the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table of the sample application. The rows of the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">emp</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> table form a hierarchy based upon the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
column which contains the employee number of the employee&#8217;s manager.
Each employee has at most, one manager. KING is the president of the
company so he has no manager, therefore KING&#8217;s </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
column is null. Also, it is possible for an employee to act as a
manager for more than one employee. This relationship forms a typical,
tree-structured, hierarchical organization chart as illustrated below.</span></p>

<p><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/EnterpriseDB_OraCompat_EN_8.jpg" border="1" height="304" width="595"></p>

<p style="text-align: center;"><b><span style="font-family: 'Times New Roman'; font-size: 10pt;">Figure 2 Employee Organization Hierarchy</span></b></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">To form a hierarchical query based upon this relationship, the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command includes the clause, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">CONNECT BY PRIOR empno = mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">. For example, given the company president, KING, with employee number 7839, any employee whose </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">
column is 7839 is a direct report of KING which is true for JONES,
BLAKE, and CLARK (these are the child nodes of KING). Similarly, for
employee, JONES, any other employee with </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">mgr</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> column equal to 7566 is a child node of JONES - these are SCOTT and FORD in this example.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The top of the organization chart is KING so there is one root node in this tree. The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">START WITH mgr IS NULL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause selects only KING as the initial root node.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The complete </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command is shown below.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT ename, empno, mgr </span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">FROM emp</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">START WITH mgr IS NULL</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">CONNECT BY PRIOR empno = mgr;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The
rows in the query output traverse each branch from the root to leaf
moving in a top-to-bottom, left-to-right order. Below is the output
from this query.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">ename  | empno | mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">--------+-------+------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> KING   |  7839 |</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JONES  |  7566 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SCOTT  |  7788 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ADAMS  |  7876 | 7788</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> FORD   |  7902 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> SMITH  |  7369 | 7902</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> BLAKE  |  7698 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> ALLEN  |  7499 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> WARD   |  7521 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MARTIN |  7654 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> TURNER |  7844 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> JAMES  |  7900 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> CLARK  |  7782 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);"> MILLER |  7934 | 7782</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(14 rows)</span></pre>

  </div><div style="margin-left: 43pt;"><p><span style="font-family: 'Times New Roman'; font-size: 14pt;"><a name="P1602_80712"></a>2.2.5.4 Node Level</span></p>

</div><p><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> is a pseudo-column that can be used wherever a column can appear in the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">SELECT</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> command. For each row in the result set, </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> returns a non-zero integer value designating the depth in the hierarchy of the node represented by this row. The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> for root nodes is 1. The </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> for direct children of root nodes is 2, and so on.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The following query is a modification of the previous query with the addition of the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> pseudo-column. In addition, using the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">LEVEL</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> value, the employee names are indented to further emphasize the depth in the hierarchy of each row.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT LEVEL, LPAD (' ', 2 * (LEVEL - 1)) || ename "employee", empno, mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">FROM emp START WITH mgr IS NULL</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">CONNECT BY PRIOR empno = mgr;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The output from this query follows.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">level |  employee   | empno | mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">-------+-------------+-------+------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     1 | KING        |  7839 |</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   JONES     |  7566 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     SCOTT   |  7788 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     4 |       ADAMS |  7876 | 7788</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     FORD    |  7902 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     4 |       SMITH |  7369 | 7902</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   BLAKE     |  7698 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     ALLEN   |  7499 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     WARD    |  7521 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     MARTIN  |  7654 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     TURNER  |  7844 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     JAMES   |  7900 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   CLARK     |  7782 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     MILLER  |  7934 | 7782</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(14 rows)</span></pre>

  </div><div style="margin-left: 43pt;"><p><span style="font-family: 'Times New Roman'; font-size: 14pt;">2.2.5.5 Ordering the Siblings</span></p>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">Nodes that share a common parent and are at the same level are called </span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"><i>siblings</i></span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.
For example in the above output, employees ALLEN, WARD, MARTIN, TURNER,
and JAMES are siblings since they are all at level three with parent,
BLAKE. JONES, BLAKE, and CLARK are siblings since they are at level two
and KING is their common parent.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The result set can be ordered so the siblings appear in ascending or descending order by selected column value(s) using the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">ORDER SIBLINGS BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause. This is a special case of the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">ORDER BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause that can be used only with hierarchical queries.</span></p>

<p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The previous query is further modified with the addition of </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">ORDER SIBLINGS BY</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> ename </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">ASC</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT LEVEL, LPAD (' ', 2 * (LEVEL - 1)) || ename "employee", empno, mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">FROM emp START WITH mgr IS NULL</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">CONNECT BY PRIOR empno = mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">ORDER SIBLINGS BY ename ASC;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The
output from the prior query is now modified so the siblings appear in
ascending order by name. Siblings BLAKE, CLARK, and JONES are now
alphabetically arranged under KING. Siblings ALLEN, JAMES, MARTIN,
TURNER, and WARD are alphabetically arranged under BLAKE, and so on.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">level |  employee   | empno | mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">-------+-------------+-------+------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     1 | KING        |  7839 |</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   BLAKE     |  7698 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     ALLEN   |  7499 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     JAMES   |  7900 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     MARTIN  |  7654 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     TURNER  |  7844 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     WARD    |  7521 | 7698</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   CLARK     |  7782 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     MILLER  |  7934 | 7782</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   JONES     |  7566 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     FORD    |  7902 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     4 |       SMITH |  7369 | 7902</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     SCOTT   |  7788 | 7566</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     4 |       ADAMS |  7876 | 7788</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(14 rows)</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">This final example adds the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">WHERE</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause and starts with three root nodes. After the node tree is constructed, the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">WHERE</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause filters out rows in the tree to form the result set.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">SELECT LEVEL, LPAD (' ', 2 * (LEVEL - 1)) || ename "employee", empno, mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">FROM emp WHERE mgr IN (7839, 7782, 7902, 7788)</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">START WITH ename IN ('BLAKE','CLARK','JONES')</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">CONNECT BY PRIOR empno = mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">ORDER SIBLINGS BY ename ASC;</span></pre>

</div><p><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;">The
output from the query shows three root nodes (level one) - BLAKE,
CLARK, and JONES. In addition, rows that do not satisfy the </span><span style="font-family: 'Courier New'; font-size: 11pt; color: Black;">WHERE</span><span style="font-family: 'Times New Roman'; font-size: 12pt; color: Black;"> clause have been eliminated from the output.</span></p><div style="margin-left: 12pt;"><pre><span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">level | employee  | empno | mgr</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">-------+-----------+-------+------</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     1 | BLAKE     |  7698 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     1 | CLARK     |  7782 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     2 |   MILLER  |  7934 | 7782</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     1 | JONES     |  7566 | 7839</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     SMITH |  7369 | 7902</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">     3 |     ADAMS |  7876 | 7788</span>
<span style="font-family: 'Courier New'; font-size: 9pt; color: rgb(46, 49, 146);">(6 rows)</span>

<a name="P1669_84563"></a></pre></div><p style="text-align: center;"><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-24.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/inveppv.gif" alt="Previous Page" border="0"></a><!-- TRANSIT - TOC --><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/Table%20of%20Contents.htm#TopOfPage" target="_top"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/invetoc.gif" alt="Table Of Contents" border="0"></a><a href="http://www.enterprisedb.com/docs/en/8.3/oracompat/EnterpriseDB_OraCompat_EN_8.3-26.htm#TopOfPage"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/invepnx.gif" alt="Next Page" border="0"></a></p>

<a href="http://www.avantstar.com/"><img src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/transpwr.gif" alt="Powered by Transit"></a><!-- TRANSIT - INFOAFTER -->
<script type="text/javascript"> 
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); 
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); 
</script><script src="EnterpriseDB_OraCompat_EN_8.3-25_arquivos/ga.js" type="text/javascript"></script> 
<script type="text/javascript"> 
var pageTracker = _gat._getTracker("UA-4413916-2"); 
pageTracker._initData(); 
pageTracker._trackPageview(); 
</script> 
</body></html>